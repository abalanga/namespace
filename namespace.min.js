!function(a){function b(){var a=Error.apply(this,arguments);return a.name="NamespaceError",a}function c(a){return k.test(a)&&a||function(){throw new b("Invalid namespace '"+a+"' provided.")}()}function d(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return b&&d.apply(this,[a].concat(j.call(arguments,2)))||a}function e(a,b){return this[a]=this[a]||this.initialize(b)}function f(a,b){return arguments.length>2?f.apply(e.call(this,b,a),[a].concat(j.call(arguments,2))):b&&e.call(this,b,a)||this}function g(a){return"string"==typeof a||"object"==typeof a&&a.constructor===String}function h(a){return f.apply(this,[{}].concat(j.call(arguments,1,arguments.length-1)))[arguments[arguments.length-1]]=a}var i=function(){},j=Array.prototype.slice,k=/^([$A-Z_][0-9A-Z_$]*)(\.[$A-Z_][0-9A-Z_$]*)*$/i;d(i.prototype,{"import":function(a,b){return f.apply(this,[b||{}].concat((c(a)||a).split(".")))},initialize:function(a){return d(new this.constructor,a)},register:function(a,d){if(arguments.length<2)throw new b("Two arguments are required.");if(!g(a))throw new b("Namespace should be a string.");return h.apply(this,[d].concat(c(a).split(".")))}}),"object"==typeof module&&module&&"object"==typeof module.exports?module.exports=i:"function"==typeof define&&define.amd?define("namespace",[],function(){return i}):"object"==typeof a&&"object"==typeof a.document&&(a.namespace=i)}(window);
//# sourceMappingURL=namespace.min.map